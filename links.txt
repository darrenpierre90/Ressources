

https://www.smashingmagazine.com/2017/06/guide-switching-http-https/

https://robertheaton.com/2014/03/27/how-does-https-actually-work/

https://wiki.wireshark.org/SSL

https://www.ibm.com/support/knowledgecenter/en/SSYKE2_7.1.0/com.ibm.java.security.component.71.doc/security-component/jsse2Docs/whyssl.html

https://www.godaddy.com/garage/whats-an-ssl-port-a-technical-guide-for-https/


https://www.webopedia.com/TERM/S/SSL.html

https://resources.infosecinstitute.com/data-analytics-in-cybersecurity/

https://resources.infosecinstitute.com/ssl-decryption/#gref

https://blog.squarelemon.com/tls-fingerprinting/

http://blog.fourthbit.com/2014/12/23/traffic-analysis-of-an-ssl-slash-tls-session




https://www.javatpoint.com/design-patterns-in-java

https://www.javatpoint.com/state-pattern

https://www.javatpoint.com/observer-pattern

 

https://www.tutorialspoint.com/java/java_interfaces.htm

http://tutorials.jenkov.com/java/interfaces.html

https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html

https://www.geeksforgeeks.org/interfaces-in-java/

 

https://stackoverflow.com/questions/3528420/why-do-we-need-interfaces-in-java

https://www.javaworld.com/article/2075069/core-java-the-ins-and-outs-of-standard-input-output.html

https://www.quora.com/What-is-the-need-of-interface-in-Java

 

https://www.geeksforgeeks.org/dns-domain-name-server/

 

https://www.geeksforgeeks.org/inter-process-communication/

 

https://www.javatpoint.com/inter-thread-communication-example

 

http://www.javapractices.com/topic/TopicAction.do?Id=51

 

https://stackoverflow.com/questions/6916398/communicating-between-two-threads

 

https://www.tutorialspoint.com/java/java_thread_communication.htm

 

https://www.geeksforgeeks.org/inter-thread-communication-java/

https://www.quora.com/What-are-some-reasons-that-Java-is-more-successful-comparing-to-other-programming

 

https://www.backblaze.com/blog/whats-the-diff-programs-processes-and-threads/

https://stackoverflow.com/questions/8811535/inconsistent-results-with-java-threads

https://www.callicoder.com/java-concurrency-issues-and-thread-synchronization/

 

https://www.javaworld.com/article/2074318/java-101--understanding-java-threads--part-2--thread-synchronization.html




https://www.oracle.com/technetwork/articles/java/singleton-1577166.html

https://www.geeksforgeeks.org/private-constructors-and-singleton-classes-in-java/

https://medium.com/@kevalpatel2106/how-to-make-the-perfect-singleton-de6b951dfdb0


https://www.google.com/search?q=singleton&rlz=1C1GCEA_enCA831CA831&oq=singleton&aqs=chrome..69i57&sourceid=chrome&ie=UTF-8

https://www.techopedia.com/definition/15830/singleton

https://stackoverflow.com/questions/1830698/what-is-inputstream-output-stream-why-and-when-do-we-use-them

https://www.studytonight.com/java/java-io-stream.php

https://www.tutorialspoint.com/java/java_files_io.htm

https://stackoverflow.com/questions/1830698/what-is-inputstream-output-stream-why-and-when-do-we-use-them

http://tutorials.jenkov.com/java-io/readers-writers.html

https://en.wikipedia.org/wiki/Text_file

https://en.wikipedia.org/wiki/Binary_file

http://tutorials.jenkov.com/java-exception-handling/try-with-resources.html

https://dzone.com/articles/java-thread-tutorial-creating-threads-and-multithr

http://tutorials.jenkov.com/java-concurrency/creating-and-starting-threads.html

https://www.javatpoint.com/creating-thread

https://www.edureka.co/blog/java-thread/

https://docs.oracle.com/javase/tutorial/essential/concurrency/index.html

https://abhiandroid.com/java/creating-a-thread.html

https://www.javatpoint.com/multithreading-in-java

https://www.baeldung.com/java-runnable-vs-extending-thread

https://en.wikipedia.org/wiki/Disassembler

https://en.wikipedia.org/wiki/Executable


https://en.wikipedia.org/wiki/Classpath_(Java)

https://www.tutorialspoint.com/java/java_multithreading.htm




https://stackoverflow.com/questions/7249871/what-is-a-build-tool

https://en.wikipedia.org/wiki/Secure_Shell

https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work

https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys

https://www.digitalocean.com/community/tutorials/understanding-the-ssh-encryption-and-connection-process

https://www.computerhope.com/unix/uchmod.htm

https://www.computerhope.com/jargon/h/hardlink.htm

https://stackoverflow.com/questions/5664669/want-an-eclipse-java-project-to-run-ant-build-files-automatically




Use of a System Output Stream

Using System.out or System.err rather than a dedicated logging facility makes it difficult to monitor the behavior of the program. It can also cause log messages accidentally returned to the end users, revealing internal information to attackers.

The first Java program that a developer learns to write often looks like this:

        public class MyClass

          public static void main(String[] args) {

               System.out.println("hello world");

          }

        }

While most programmers go on to learn many nuances and subtleties about Java, a surprising number hang on to this first lesson and never give up on writing messages to standard output using System.out.println().

The problem is that writing directly to standard output or standard error is often used as an unstructured form of logging. Structured logging facilities provide features like logging levels, uniform formatting, a logger identifier, timestamps, and, perhaps most critically, the ability to direct the log messages to the right place. When the use of system output streams is jumbled together with the code that uses loggers properly, the result is often a well-kept log that is missing critical information. In addition, using system output streams can also cause log messages accidentally returned to end users, revealing application internal information to attackers.

Developers widely accept the need for structured logging, but many continue to use system output streams in their "pre-production" development. If the code you are reviewing is past the initial phases of development, use of System.out or System.err may indicate an oversight in the move to a structured logging system.

 

 

https://examples.javacodegeeks.com/core-java/lang/system/out/logging-system-println-results-log-file-example/

 

https://javarevisited.blogspot.com/2016/06/why-use-log4j-logging-vs.html

 

https://www.udemy.com/spring-boot-complete-guide-from-development-to-deployment/?ranMID=39197&ranEAID=JVFxdTr9V80&ranSiteID=JVFxdTr9V80-D_OwZ4lfQVZWgSwgJeqPYA&LSNPUBID=JVFxdTr9V80

 

https://automationtalks.com/2017/06/04/why-log4j-is-better-than/

 

https://coderanch.com/t/501934/java/sysout-logger

 

https://www.quora.com/Why-is-log4j-better-than-System-out-println

 

https://javarevisited.blogspot.com/2016/06/why-use-log4j-logging-vs.html




https://www.journaldev.com/1016/java-thread-example

https://www.journaldev.com/2856/java-jvm-memory-model-memory-management-in-java

https://www.journaldev.com/4098/java-heap-space-vs-stack-memory

https://www.google.com/search?q=size+vs+size+on+disk&rlz=1C1GCEA_enCA831CA831&oq=size+vs+s&aqs=chrome.1.69i57j0l5.5943j0j7&sourceid=chrome&ie=UTF-8


https://medium.freecodecamp.org/you-should-have-better-logging-now-fbab2f667fac

https://medium.freecodecamp.org/node-js-streams-everything-you-need-to-know-c9141306be93

https://en.wikipedia.org/wiki/Stream_(computing)

https://howtodoinjava.com/junit-5-tutorial/


https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction

https://docs.microsoft.com/en-us/azure/architecture/data-guide/technology-choices/data-storage

https://www.quora.com/Can-anybody-share-web-links-for-good-Hadoop-tutorials

https://easychair.org/publications/open/HVp

http://highscalability.com/blog/2012/6/20/ask-highscalability-how-do-i-organize-millions-of-images.html?currentPage=2#comments

https://community.hortonworks.com/questions/56403/image-store-in-hdfs-and-reiterative-metadata-from.html

https://www.quora.com/Which-is-best-storing-images-in-Hadoop-or-storing-it-in-HBase-and-creating-an-index-to-it-How-can-we-do-that

 

http://file.scirp.org/Html/1-1470145_50499.htm

http://connect2sujit.blogspot.com/2016/11/storing-images-in-hbase.html

 

I would suggested to keep the images on a filesystem instead of a database, the comments about using riak or another db isn't going to solve the issue.

Using a filestructure with sha1 and sorts is fine, but won't distribute it in a way you want with great scale.

GridFs or another distributed filesystem could help, but that's still not the performance you are looking for.

Using S3 isn't really the choice someone wanna go with millions of images. It's alright for startups and someone scaling up in the beginning, but when you want some sort of your own solution, which reduces the price AWS won't work forever.

 

"Don't reinvent the wheel".

 

I think you are looking for S3, Rackspace Cloudfiles without the extra cost and with some more flexibility.

For that I would say OpenStack Swift (used by Rackspace Cloudfiles) is the way to go.

Easily add new capacity.

Easy scale out.

Great decentralized structure (hashing ring).

No single point of failure.

Opensource and easy to setup.

If you would start with some hundred images, you could start with Rackspace Cloudfiles and later switch to your own public or hybrid cloud solution.

Redundancy built in.

Deduplication will probably follow in next versions.

Have your service provide the url etc. to a rewritable domain, which first can be Rackspace and later switch to your own solution with OpenStack swift and serve all images from there directly. If you really need some sort of caching for peaks and OpenStack Swift should give up (unlikely), you can use a cdn or additional caching software (custommade or varnish etc.).

YouTube scale with this approach. They used their own hardware/software solution for permanent storage and used a cdn for peak loads. (disclaimer: they didn't use swift so, wasn't yet invented.)

 

For further questions I'll be happy to help (I'll monitor the comments).

Critism is welcome!

 

Disclaimer: I'm not affiliated with any of the services mentioned.

 

Cheers Michael

 

HIPI is an image processing library designed to be used with the Apache Hadoop MapReduce parallel programming framework. HIPI facilitates efficient and high-throughput image processing with MapReduce style parallel programs typically executed on a cluster.

It provides a solution for how to store a large collection of images on the Hadoop Distributed File System (HDFS) and make them available for efficient distributed processing.

 Whatever you do, please don't store the images in the file system. Yes, you will get a FS to do what you want with some of the above tricks, but really, think about it. Can you recognize and remove duplicates easily? Can you reorganize the way the images are stored? Can you do a backup, or even a hot-standby system? Not very easily! If you don't want to do offsite storage, consider staying with a database system.

 

We store several million images in a MySQL MyISAM DB of about 200GB - identifier, image data, hash sum. You can add whatever metadata you want. Don't know what performance you're looking for, but with very ordinary hardware, even virtualized, we get one image in a few ms, parallel fetching increases the efficiency.

 

Yes, maybe NTFS handles this more effeciently than ext4, reiser or xfs (which we tried), but still problems remain. With a database system, you can also use sharding or partitioning if your data becomes too large or if you need more performance. Key-value-stores like Riak could also be an option, but I don't have the expertise to comment on that.

 

 

What about MogileFS?, Uses MySql for storing metadata and local filesystem.

 

June 22, 2012 |  Unregistered CommenterKrishna

Be careful about recommending that images are stored in a database? My app has 100 million + images taking up over 100TB of disk. My database is about 100GB. If I ever had to do a restore of my database I might as well just turn the stie off because it would be in maintenance mode for so long that my customers would just go away. A database is just not good at handing ridiculous amounts of unsearchable binary data.

 

June 22, 2012 |  Unregistered CommenterJoe

We have recently migrated our images servers to MogileFS + Nginx and it works great. You can add nodes if you ran out of space, make MogileFS store automatically several copies of your file. It is backup by a MySQL database which you can replicate to another server to prevent failure. Give it a look.

 

https://www.geeksforgeeks.org/indexing-in-databases-set-1/

https://stackoverflow.com/questions/30841756/storing-and-reading-images-from-hbase

https://ieeexplore.ieee.org/document/6626187/references

http://connect2sujit.blogspot.com/2016/11/storing-images-in-hbase.html

 

https://community.hortonworks.com/questions/10764/effective-way-to-store-image-files-pdf-files-in-hd.html

 

https://www.quora.com/How-can-I-load-and-retrieve-the-images-from-and-to-the-Hadoop-Hive-HDFS-and-HBase-Where-can-I-get-an-example-of-this-being-implemented

 

https://stackoverflow.com/questions/16546040/store-images-videos-into-hadoop-hdfs

 

https://docs.microsoft.com/en-us/azure/storage/common/storage-introduction




https://www.slideshare.net/continuumio/open-data-science-with-r-and-anaconda

https://www.slideshare.net/continuumio/distributed-computing-on-your-cluster-with-anaconda-webinar-2015

https://anaconda.org/anaconda-cluster/notebook-pyspark-language/notebook


sparklyr

http://spark.rstudio.com/

 

sparklyr and dplyr

https://spark.rstudio.com/dplyr/

 

spark mllib and sparklyr

https://spark.rstudio.com/mlib/

 

sparklyr and distributed R

https://spark.rstudio.com/guides/distributed-r/

https://en.wikipedia.org/wiki/Data_analysis

https://en.wikipedia.org/wiki/Software_engine

https://en.wikipedia.org/wiki/Apache_Spark

https://ca.simplilearn.com/data-science-vs-big-data-vs-data-analytics-article




https://emploisfp-psjobs.cfp-psc.gc.ca/srs-sre/page01.htm?poster=341&lang=en


http://www.coachmag.co.uk/sport/5111/rugby-workout-to-get-back-in-shape-for-the-pack




https://www.codingame.com/start -for Noah link

https://medium.com/coderbyte/a-guide-to-becoming-a-full-stack-developer-in-2017-5c3c08a1600c

https://cses.fi/book/index.html

https://medium.com/coderbyte/the-10-best-coding-challenge-websites-for-2018-12b57645b654

https://www.topcoder.com/community/data-science/data-science-tutorials/dynamic-programming-from-novice-to-advanced/

https://medium.com/coderbyte/a-guide-to-becoming-a-full-stack-developer-in-2017-5c3c08a1600c

https://justin.abrah.ms/computer-science/big-o-notation-explained.html

https://hbfs.wordpress.com/2008/12/23/the-10-classes-of-algorithms-every-programmer-must-know-about/




http://nextluxury.com/mens-lifestyle-advice/100-things-to-do-before-you-die-for-men/



https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books.md#hadoop


https://www.jobbank.gc.ca/jobsearch/jobsearch?fjsf=1&mid=22409&sort=D&lang=en#results-list-content

https://www.jobbank.gc.ca/content_pieces-eng.do?cid=6464

https://www.canada.ca/en/services/jobs/training/students.html

https://www.canada.ca/en/services/jobs/training/students.html

https://www.canada.ca/en/services/jobs/opportunities/student.html

https://ca.indeed.com/cmp/Ontario-Stars/jobs/Student-Placement-da2d714c7040b09b?sjdu=vQIlM60yK_PwYat7ToXhkyMB5bKkCc5RUoKavhBs_YpPGMN0tgYU9-d0Twv6D_cy7cvG2eWplAX1KDxmpNalQ7bt71cC7jlJqaMiBBbRbC6IV251dHPRqF6A58Szik0k&tk=1cfv4481453sgbqm&vjs=3

https://ca.indeed.com/cmp/DoorDash/jobs/Dash-Team-Associate-f51ab0dc76b5f223?sjdu=vQIlM60yK_PwYat7ToXhk31mwNldc6p8s5K2l1-IjX9qca_kbdLZQiLZwikrXjGyQ5731SETj0VPXQieIunqsovyf38bNbOPTk7aXvbDciY&tk=1cfv4481453sgbqm&vjs=3

https://helpwanted.indeed.com/jobs/viewjob/18beed817265a423?jk=a3431957c848d23b&vjs=3

https://ca.indeed.com/cmp/Canadian-Safety-Standards/jobs/Entry-Level-Summer-Position-df27d1f35b9c2294?sjdu=vQIlM60yK_PwYat7ToXhk2Hh0C0uYnrqqEeCi3vdtTFdZZT-dTWWbrV97WknAHN8KNyQ7ZuXjBJw5ciY4A8FvqEOcahAdt2TetGS8dsL9TU&tk=1cfv4481453sgbqm&vjs=3

https://ca.indeed.com/cmp/Ontario-Stars/jobs/Entry-Level-Youth-Employment-f58bb85653a6e7fb?sjdu=vQIlM60yK_PwYat7ToXhk2Hh0C0uYnrqqEeCi3vdtTHYac1hkQQo6wveBXRhoq5hggedwkEVrlVEJVR0yecw-3LeJnbPoBWx-lCRpwGr2ko&tk=1cfv4610s53sg9d3&vjs=3

https://ca.jobdiagnosis.com/m/sr_pop_landing.php?keyword=part%20time%20jobs%20for%20students&location=&aff_id=mikegoogle&sub_id=canada&phonefal=paused&locfinder=paused&textloc=loc&col=yes&gclid=EAIaIQobChMIkOXk9ZLT2wIVyLjACh0vHQ34EAAYAiAAEgKT4PD_BwE




https://www.sportsnet.ca/basketball/nba/fiba-world-cup-olympic-qualifying-faq-understanding-new-format/

https://www.tutorialspoint.com/internet_technologies/web_servers.htm

https://www.tutorialspoint.com/computer_glossary.htm


https://developer.mozilla.org/en-US/docs/Learn/HTML

https://www.codecademy.com/tracks/web/

http://htmldog.com/guides/html/beginner/

https://elitedatascience.com/learn-python-for-data-science



https://rugbyrenegade.com/rugby-fitness-training-the-ultimate-guide-to-get-fitter-for-rugby/

https://elitedatascience.com/learn-math-for-data-science

https://www.analyticsvidhya.com/blog/2016/02/free-read-books-statistics-mathematics-data-science/

https://www.thisismetis.com/demystifying-data-science#register


